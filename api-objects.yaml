apiVersion: v1
items:
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations: {}
    creationTimestamp: null
    labels:
      app: sogo
    name: memcached
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/generated-by: OpenShiftWebConsole
        openshift.io/imported-from: memcached:1-alpine
      from:
        kind: DockerImage
        name: memcached:1-alpine
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: sogo
    name: sogo
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: 172.30.1.1:5000/OC_PROJECT_NAME/sogo:latest
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: sogo-httpd
    name: sogo-httpd
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: 172.30.1.1:5000/OC_PROJECT_NAME/sogo-httpd:latest
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations: {}
    creationTimestamp: null
    name: backups
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 20Gi
    volumeName: sogo-backups
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations: {}
    creationTimestamp: null
    name: etc-sogo
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    volumeName: sogo-etc-sogo
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations: {}
    creationTimestamp: null
    name: var-lib-mysql-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 10Gi
    volumeName: sogo-var-lib-mysql-data
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations: {}
    creationTimestamp: null
    name: var-log-sogo
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 5Gi
    volumeName: sogo-var-log-sogo
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations: {}
    creationTimestamp: null
    name: builder
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations: {}
    creationTimestamp: null
    name: default
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations: {}
    creationTimestamp: null
    name: deployer
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: sogo
    name: sogo
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: sogo:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      binary: {}
      contextDir: dockercontext/sogo
      type: Binary
    strategy:
      dockerStrategy: {}
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: EkmLq2d-f7nWAHQ3MMIe
      type: GitHub
    - generic:
        secret: 0bM1Cp3XgSDSJZKmb5Ax
      type: Generic
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: sogo-httpd
    name: sogo-httpd
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: sogo-httpd:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      binary: {}
      contextDir: dockercontext/sogo-httpd
      type: Binary
    strategy:
      dockerStrategy: {}
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: aelrRcTIOhLJNbdzSMVd
      type: GitHub
    - generic:
        secret: pMJZg7ShrfSL4m7PjCup
      type: Generic
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: sogo
    name: memcached
  spec:
    replicas: 1
    selector:
      app: sogo
      deploymentconfig: memcached
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: sogo
          deploymentconfig: memcached
      spec:
        containers:
        - image: memcached@sha256:11157b52ee72427fe5d0fe457e8cecb01598653e9754319fa597a7361a33710a
          imagePullPolicy: IfNotPresent
          name: memcached
          ports:
          - containerPort: 11211
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - memcached
        from:
          kind: ImageStreamTag
          name: memcached:latest
          namespace: OC_PROJECT_NAME
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: 'true'
    creationTimestamp: null
    labels:
      app: sogo
      template: mysql-persistent-template
    name: mysql
  spec:
    replicas: 1
    selector:
      name: mysql
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: mysql
      spec:
        containers:
        - env:
          - name: MYSQL_USER
            value: sogo
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: sogo-secrets
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-root-password
                name: sogo-secrets
          - name: MYSQL_DATABASE
            value: sogo
          image: centos/mysql-57-centos7@sha256:d5632b029709619bc6982ad41defe20d2f61d1a0f757b77a6fa6638d3b9b7994
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3306
            timeoutSeconds: 1
          name: mysql
          ports:
          - containerPort: 3306
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE
                -e 'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql/data
            name: var-lib-mysql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: var-lib-mysql-data
          persistentVolumeClaim:
            claimName: var-lib-mysql-data
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mysql
        from:
          kind: ImageStreamTag
          name: mysql:5.7
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: sogo
    name: sogo
  spec:
    replicas: 1
    selector:
      app: sogo
      deploymentconfig: sogo
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: sogo
          deploymentconfig: sogo
      spec:
        containers:
        - env:
          - name: SOGO_MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: sogo-secrets
          image: 172.30.1.1:5000/OC_PROJECT_NAME/sogo@sha256:a43e6e119fc140fc8d60e439fbb85f1e0170a02ec6df71914f71cb20b831c1db
          imagePullPolicy: Always
          name: sogo
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /backups
            name: backups
          - mountPath: /etc/sogo
            name: etc-sogo
          - mountPath: /var/log/sogo
            name: var-log-sogo
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: backups
          persistentVolumeClaim:
            claimName: backups
        - name: etc-sogo
          persistentVolumeClaim:
            claimName: etc-sogo
        - name: var-log-sogo
          persistentVolumeClaim:
            claimName: var-log-sogo
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - sogo
        from:
          kind: ImageStreamTag
          name: sogo:latest
          namespace: OC_PROJECT_NAME
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: sogo-httpd
    name: sogo-httpd
  spec:
    replicas: 1
    selector:
      app: sogo-httpd
      deploymentconfig: sogo-httpd
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: sogo-httpd
          deploymentconfig: sogo-httpd
      spec:
        containers:
        - env:
          - name: SERVER_NAME
            value: sogo-httpd-sogo.127.0.0.1.nip.io
          image: 172.30.1.1:5000/OC_PROJECT_NAME/sogo-httpd@sha256:667f6dc1043015a923fe7585348f7280f5c5fa83cb0598bb6e5c7d170542bf33
          imagePullPolicy: Always
          name: sogo-httpd
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - sogo-httpd
        from:
          kind: ImageStreamTag
          name: sogo-httpd:latest
          namespace: OC_PROJECT_NAME
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: sogo
    name: memcached
  spec:
    ports:
    - name: 11211-tcp
      port: 11211
      protocol: TCP
      targetPort: 11211
    selector:
      deploymentconfig: memcached
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      template.openshift.io/expose-uri: mysql://{.spec.clusterIP}:{.spec.ports[?(.name=="mysql")].port}
    creationTimestamp: null
    labels:
      app: sogo
      template: mysql-persistent-template
    name: mysql
  spec:
    ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      name: mysql
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations: {}
    creationTimestamp: null
    labels:
      app: sogo
    name: sogo
  spec:
    ports:
    - port: 20000
      protocol: TCP
      targetPort: 20000
    selector:
      app: sogo
      deploymentconfig: sogo
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: sogo-httpd
    name: sogo-httpd
  spec:
    ports:
    - name: 80-tcp
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      deploymentconfig: sogo-httpd
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: 'true'
    creationTimestamp: null
    labels:
      app: sogo
    name: sogo-httpd
  spec:
    host: sogo-httpd-OC_PROJECT_NAME.127.0.0.1.nip.io
    port:
      targetPort: 80-tcp
    to:
      kind: Service
      name: sogo-httpd
      weight: 100
    wildcardPolicy: None
kind: List
metadata: {}
